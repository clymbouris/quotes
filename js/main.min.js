function ViewModel(t){var e=this;e.currentQuote=ko.observable(),e.nextQuote=function(){$(this).find("span").animate({opacity:0}).queue(function(){$(this).text("new text").dequeue()}),e.authorsMax||(e.authorsMax=Object.keys(model.data.authors).length);var t=Math.floor(Math.random()*e.authorsMax),o=model.data.authors[t].name,a=Object.keys(model.data.quotes[t]).length,n=Math.floor(Math.random()*a),u=model.data.quotes[t][n];e.currentQuote({author:o,quote:u})},e.tweetQuote=function(){window.open("https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text="+encodeURIComponent('"'+e.currentQuote().quote+'" '+e.currentQuote().author))}}var model={data:null,init:function(){$.getJSON("js/quotes.json").done(function(t){model.data=t;var e=new ViewModel;ko.applyBindings(e)}).fail(function(t,e,o){var a=e+", "+o;console.log("Request Failed: "+a),$("#quote").text(a),$("#author").text("something went wrong")})}};model.init();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJWaWV3TW9kZWwiLCJlcnIiLCJzZWxmIiwidGhpcyIsImN1cnJlbnRRdW90ZSIsImtvIiwib2JzZXJ2YWJsZSIsIm5leHRRdW90ZSIsIiQiLCJmaW5kIiwiYW5pbWF0ZSIsIm9wYWNpdHkiLCJxdWV1ZSIsInRleHQiLCJkZXF1ZXVlIiwiYXV0aG9yc01heCIsIk9iamVjdCIsImtleXMiLCJtb2RlbCIsImRhdGEiLCJhdXRob3JzIiwibGVuZ3RoIiwiYVJhbmRvbSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImF1dGhvciIsIm5hbWUiLCJxdW90ZXNNYXgiLCJxdW90ZXMiLCJxUmFuZG9tIiwicXVvdGUiLCJ0d2VldFF1b3RlIiwid2luZG93Iiwib3BlbiIsImVuY29kZVVSSUNvbXBvbmVudCIsImluaXQiLCJnZXRKU09OIiwiZG9uZSIsImpzb24iLCJ2bSIsImFwcGx5QmluZGluZ3MiLCJmYWlsIiwianF4aHIiLCJ0ZXh0U3RhdHVzIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUE0QkEsUUFBQUEsV0FBQUMsR0FFQSxHQUFBQyxHQUFBQyxJQUVBRCxHQUFBRSxhQUFBQyxHQUFBQyxhQUVBSixFQUFBSyxVQUFBLFdBQ0FDLEVBQUFMLE1BQUFNLEtBQUEsUUFDQUMsU0FBQUMsUUFBQSxJQUNBQyxNQUFBLFdBQ0FKLEVBQUFMLE1BQUFVLEtBQUEsWUFDQUMsWUFHQVosRUFBQWEsYUFBQWIsRUFBQWEsV0FBQUMsT0FBQUMsS0FBQUMsTUFBQUMsS0FBQUMsU0FBQUMsT0FDQSxJQUFBQyxHQUFBQyxLQUFBQyxNQUFBRCxLQUFBRSxTQUFBdkIsRUFBQWEsWUFDQVcsRUFBQVIsTUFBQUMsS0FBQUMsUUFBQUUsR0FBQUssS0FFQUMsRUFBQVosT0FBQUMsS0FBQUMsTUFBQUMsS0FBQVUsT0FBQVAsSUFBQUQsT0FDQVMsRUFBQVAsS0FBQUMsTUFBQUQsS0FBQUUsU0FBQUcsR0FDQUcsRUFBQWIsTUFBQUMsS0FBQVUsT0FBQVAsR0FBQVEsRUFFQTVCLEdBQUFFLGNBQUFzQixPQUFBQSxFQUFBSyxNQUFBQSxLQUdBN0IsRUFBQThCLFdBQUEsV0FDQUMsT0FBQUMsS0FBQSw4RUFDQUMsbUJBQUEsSUFBQWpDLEVBQUFFLGVBQUEyQixNQUFBLEtBQUE3QixFQUFBRSxlQUFBc0IsVUFwREEsR0FBQVIsUUFDQUMsS0FBQSxLQUNBaUIsS0FBQSxXQUNBNUIsRUFBQTZCLFFBQUEsa0JBQ0FDLEtBQUEsU0FBQUMsR0FFQXJCLE1BQUFDLEtBQUFvQixDQUVBLElBQUFDLEdBQUEsR0FBQXhDLFVBQ0FLLElBQUFvQyxjQUFBRCxLQUVBRSxLQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBRUEsR0FBQTVDLEdBQUEyQyxFQUFBLEtBQUFDLENBRUFDLFNBQUFDLElBQUEsbUJBQUE5QyxHQUNBTyxFQUFBLFVBQUFLLEtBQUFaLEdBQ0FPLEVBQUEsV0FBQUssS0FBQSwyQkEwQ0FLLE9BQUFrQiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gLS0gTU9ERUwgLS0gLy9cblxudmFyIG1vZGVsID0ge1xuXHRkYXRhOiBudWxsLFxuXHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHQkLmdldEpTT04oJ2pzL3F1b3Rlcy5qc29uJylcblx0XHQuZG9uZShmdW5jdGlvbigganNvbiApIHtcblxuXHRcdFx0bW9kZWwuZGF0YSA9IGpzb247XG5cdFx0XHQvLyBDb250cnVjdCBWaWV3TW9kZWwgYWZ0ZXIgbW9kZWwgaXMgbG9hZGVkXG5cdFx0XHR2YXIgdm0gPSBuZXcgVmlld01vZGVsKCk7XG5cdFx0XHRrby5hcHBseUJpbmRpbmdzKHZtKTtcblx0XHR9KVxuXHRcdC5mYWlsKGZ1bmN0aW9uKCBqcXhociwgdGV4dFN0YXR1cywgZXJyb3IgKSB7XG5cblx0XHRcdHZhciBlcnIgPSB0ZXh0U3RhdHVzICsgXCIsIFwiICsgZXJyb3I7XG5cdFx0XHQvLyBTaG93IGVycm9yIG1lc3NhZ2Vcblx0XHRcdGNvbnNvbGUubG9nKCBcIlJlcXVlc3QgRmFpbGVkOiBcIiArIGVyciApO1xuXHRcdFx0JCgnI3F1b3RlJykudGV4dChlcnIpO1xuXHRcdFx0JCgnI2F1dGhvcicpLnRleHQoJ3NvbWV0aGluZyB3ZW50IHdyb25nJyk7XG5cdFx0fSk7XG5cdH1cbn07XG5cblxuLy8gLS0gVklFV01PREVMIC0tIC8vXG5cbmZ1bmN0aW9uIFZpZXdNb2RlbChlcnIpIHtcblxuXHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0c2VsZi5jdXJyZW50UXVvdGUgPSBrby5vYnNlcnZhYmxlKCk7XG5cdFxuXHRzZWxmLm5leHRRdW90ZSA9IGZ1bmN0aW9uKCkge1xuICAgIFx0JCh0aGlzKS5maW5kKFwic3BhblwiKVxuICAgICAgICAuYW5pbWF0ZSh7b3BhY2l0eTowfSlcbiAgICAgICAgLnF1ZXVlKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgJCh0aGlzKS50ZXh0KFwibmV3IHRleHRcIilcbiAgICAgICAgICAgICAgICAgICAgLmRlcXVldWUoKTtcbiAgICAgICAgfSk7IFxuXHRcdC8vIEdldCByYW5kb20gYXV0aG9yXG5cdFx0aWYgKCFzZWxmLmF1dGhvcnNNYXgpIHNlbGYuYXV0aG9yc01heCA9IE9iamVjdC5rZXlzKG1vZGVsLmRhdGEuYXV0aG9ycykubGVuZ3RoO1xuXHRcdHZhciBhUmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc2VsZi5hdXRob3JzTWF4KTtcblx0XHR2YXIgYXV0aG9yID0gbW9kZWwuZGF0YS5hdXRob3JzW2FSYW5kb21dLm5hbWU7XG5cdFx0Ly8gR2V0IHJhbmRvbSBxdW90ZSBmcm9tIGF1dGhvclxuXHRcdHZhciBxdW90ZXNNYXggPSBPYmplY3Qua2V5cyhtb2RlbC5kYXRhLnF1b3Rlc1thUmFuZG9tXSkubGVuZ3RoO1xuXHRcdHZhciBxUmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcXVvdGVzTWF4KTtcblx0XHR2YXIgcXVvdGUgPSBtb2RlbC5kYXRhLnF1b3Rlc1thUmFuZG9tXVtxUmFuZG9tXTtcblx0XHQvLyBVcGRhdGUgY3VycmVudCBxdW90ZVxuXHRcdHNlbGYuY3VycmVudFF1b3RlKHsgXCJhdXRob3JcIjogYXV0aG9yLCBcInF1b3RlXCI6IHF1b3RlIH0pO1xuXHR9O1xuXG5cdHNlbGYudHdlZXRRdW90ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdHdpbmRvdy5vcGVuKCdodHRwczovL3R3aXR0ZXIuY29tL2ludGVudC90d2VldD9oYXNodGFncz1xdW90ZXMmcmVsYXRlZD1mcmVlY29kZWNhbXAmdGV4dD0nICtcblx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCgnXCInICsgc2VsZi5jdXJyZW50UXVvdGUoKS5xdW90ZSArICdcIiAnICsgc2VsZi5jdXJyZW50UXVvdGUoKS5hdXRob3IpKTtcbiAgICB9O1xufVxuXG5cbi8vIC0tIEluaXRpYWxpemUgQ29tcG9uZW50cyAtLSAvL1xuXG5tb2RlbC5pbml0KCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
